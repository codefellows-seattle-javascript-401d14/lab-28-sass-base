$brand-black: #000;
$brand-white: #fff;
$brand-tiff: #1ef3ed;
$brand-grey: #a7a7a7;
$brand-lime: #1ef383;
$pad: 1em;

@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content
  }
  @-moz-keyframes #{$name} {
    @content
  }
  @-ms-keyframes #{$name} {
    @content
  }
  @-o-keyframes #{$name} {
    @content
  }
  @keyframes #{$name} {
    @content
  }
}

@mixin animation($value) {
  -webkit-animation: $value;
  -moz-animation: $value;
  -ms-animation: $value;
  -o-animation: $value;
  animation: $value;
}

@include keyframes(move) {
  0% { left: 0; }
  100% { left: 100px; }
}

.box {
  @include animation(move 0.5s ease infinite alternate);

  position: relative;
  background: red;
  width: 100px;
  height: 100px;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

@mixin _position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i
    and $i + 1 <= length($args)
    and type-of( nth($args, $i + 1) ) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

@mixin absolute($args) {
  @include _position(absolute, $args);
}

@mixin triangle($direction, $position, $color: currentColor, $size: 1em) {
  // Make sure the direction is valid
  @if not index(top right bottom left, $direction) {
    @warn "Direction must be one of top, right, bottom or left.";
  }

  @else {
    @include absolute($position); // Position
    @include size(0); // Size
    content: '';
    z-index: 2;

    border-#{opposite-position($direction)}: $size * 1.5 solid $color;
    $perpendicular-borders: $size solid transparent;

    @if $direction == top or $direction == bottom {
      border-left:   $perpendicular-borders;
      border-right:  $perpendicular-borders;
    }

    @else if $direction == right or $direction == left {
      border-bottom: $perpendicular-borders;
      border-top:    $perpendicular-borders;
    }
  }
}


.tooltip {
  max-width: 20em;
  margin: 0 auto;

  position: relative;

  background: #3498db;
  padding: .5em;
  border-radius: .15em;
  filter: drop-shadow(0 .15em .1em rgba(0,0,0,.25));

  color: white;
  text-align: center;
  font-weight: bold;

  &:before {
    @include triangle(
      $direction : bottom,
      $position  : top 100% left 1em,
      $color     : #3498db
    );
  }
}

body {
  padding: 1em;
}

p {
  text-align: left;
  padding-top: .01em;
}

* {
  position: static;
  width: 100%;
  margin: 0px;
  padding: 0px;
  font-size: 1vw;
  font-weight: normal;
  line-height: 1em;
  text-decoration: none;
  color: $brand-black;
  &:focus {
    outline: 0;
  }
}

html, body {
  position: relative;
  height: 100%;
}

body {
  background-color: $brand-lime;
  height: auto;
  padding: $pad * 3;
}

@for $i from 8 through 1 {
  h#{$i} {
    @include keyframes(move) {
      0%   { left: 0; }
      100% { left: 2vw; }
    }
  }
}

p {
  color: $brand-tiff;
  margin-bottom: $pad;
  margin-top: $pad;
}

a {
  font-weight: bold;
  font-family: Helvetica, sans-serif;
  &:hover {
    color: $brand-grey;
  }
}

ul, ol {
  margin-left: $pad;
  margin-right: $pad;
}

form {
  font-family: sans-serif;
  input {
    @include triangle($direction: right, $position: inherit, $color: currentColor, $size: 1em)
    &:focus {
      border: 1px solid $brand-grey;
    }
  }
}
button {
  @include triangle ($direction: right , $position: inherit, $color: currentColor, $size: 1em)
  &:hover {
    color: $brand-white;
    background-color: $brand-grey;
  }
}

pre {
  color: $brand-grey;
}
